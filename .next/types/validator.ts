// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/dist/lib/metadata/types/metadata-interface.js"

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}


// Validate ../../app/(pages)/cadastro/page.tsx
{
  const handler = {} as typeof import("../../app/(pages)/cadastro/page.js")
  handler satisfies AppPageConfig<"/cadastro">
}

// Validate ../../app/(pages)/dashboard/[id]/assinaturas/[assinaturaid]/page.tsx
{
  const handler = {} as typeof import("../../app/(pages)/dashboard/[id]/assinaturas/[assinaturaid]/page.js")
  handler satisfies AppPageConfig<"/dashboard/[id]/assinaturas/[assinaturaid]">
}

// Validate ../../app/(pages)/dashboard/[id]/assinaturas/page.tsx
{
  const handler = {} as typeof import("../../app/(pages)/dashboard/[id]/assinaturas/page.js")
  handler satisfies AppPageConfig<"/dashboard/[id]/assinaturas">
}

// Validate ../../app/(pages)/dashboard/[id]/page.tsx
{
  const handler = {} as typeof import("../../app/(pages)/dashboard/[id]/page.js")
  handler satisfies AppPageConfig<"/dashboard/[id]">
}

// Validate ../../app/(pages)/descubra/page.tsx
{
  const handler = {} as typeof import("../../app/(pages)/descubra/page.js")
  handler satisfies AppPageConfig<"/descubra">
}

// Validate ../../app/(pages)/login/page.tsx
{
  const handler = {} as typeof import("../../app/(pages)/login/page.js")
  handler satisfies AppPageConfig<"/login">
}

// Validate ../../app/(pages)/page.tsx
{
  const handler = {} as typeof import("../../app/(pages)/page.js")
  handler satisfies AppPageConfig<"/">
}

// Validate ../../app/(pages)/planos/[id]/page.tsx
{
  const handler = {} as typeof import("../../app/(pages)/planos/[id]/page.js")
  handler satisfies AppPageConfig<"/planos/[id]">
}

// Validate ../../app/(pages)/planos/page.tsx
{
  const handler = {} as typeof import("../../app/(pages)/planos/page.js")
  handler satisfies AppPageConfig<"/planos">
}

// Validate ../../app/(pages)/quem-somos/page.tsx
{
  const handler = {} as typeof import("../../app/(pages)/quem-somos/page.js")
  handler satisfies AppPageConfig<"/quem-somos">
}

// Validate ../../app/(pages)/rota-da-cerveja/page.tsx
{
  const handler = {} as typeof import("../../app/(pages)/rota-da-cerveja/page.js")
  handler satisfies AppPageConfig<"/rota-da-cerveja">
}







// Validate ../../app/(pages)/dashboard/[id]/layout.tsx
{
  const handler = {} as typeof import("../../app/(pages)/dashboard/[id]/layout.js")
  handler satisfies LayoutConfig<"/dashboard/[id]">
}

// Validate ../../app/(pages)/layout.tsx
{
  const handler = {} as typeof import("../../app/(pages)/layout.js")
  handler satisfies LayoutConfig<"/">
}
